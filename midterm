library(Seurat)
library(ggplot2)
library(dplyr)

cell.barcodes <- scan(text = readLines("C:/Users/Weiyi/Downloads/E-MTAB-5061/pancreas_refseq_rpkms_counts_3514sc.txt", 1), 
                      what = "", quiet = TRUE)[-1] # 3514 cell barcodes
count=read.table('C:/Users/Weiyi/Downloads/E-MTAB-5061/pancreas_refseq_rpkms_counts_3514sc.txt',sep='\t')
gene.meta=count[,1:2] 
count=count[,-(1:2)]
count=as.matrix(count[,3515:7028]) 
rownames(count)=gene.meta[,1]
colnames(count)=cell.barcodes
rm(gene.meta, cell.barcodes

cell.meta=read.csv('C:/Users/Weiyi/Downloads/E-MTAB-5061/E-MTAB-5061.sdrf.txt',sep='\t')
table(cell.meta$Characteristics..individual.)

cell.meta=cell.meta[,1:5]
count=count[,match(cell.meta$Source.Name, colnames(count))]
all(colnames(count)==cell.meta$Source.Name)

dim(count); dim(cell.meta)
count=count[unique(rownames(count)),]
rownames(cell.meta)=cell.meta$Source.Name

seger=CreateSeuratObject(counts = count, project = "seger", min.cells = 3, min.features = 200,
                         meta.data = cell.meta)
seger <- subset(seger, idents = c("HP1504101T2D", "HP1508501T2D", "HP1525301T2D", "HP1526901T2D"), invert = TRUE)
rm(count, cell.meta)

seger <- NormalizeData(seger, normalization.method = "LogNormalize", scale.factor = 10000)
seger <- FindVariableFeatures(seger, selection.method = "vst", nfeatures = 2000)
seger <- ScaleData(seger, features = rownames(seger))
seger <- RunPCA(seger, features = VariableFeatures(object = seger))
ElbowPlot(seger)

seger <- RunTSNE(seger, dims = 1:10)
DimPlot(seger, group.by='Characteristics..individual.')

FeaturePlot(seger, reduction = "tsne",features = c("KRT19","PRSS1","GCG",
                                                        "INS","PPY","SST",
                                                        "GHRL"), ncol = 4)

baron1=read.csv('C:/Users/Weiyi/Downloads/GSE84133_RAW/GSM2230757_human1_umifm_counts.csv.gz')
baron2=read.csv('C:/Users/Weiyi/Downloads/GSE84133_RAW/GSM2230758_human2_umifm_counts.csv.gz')
baron3=read.csv('C:/Users/Weiyi/Downloads/GSE84133_RAW/GSM2230759_human3_umifm_counts.csv.gz')
baron4=read.csv('C:/Users/Weiyi/Downloads/GSE84133_RAW/GSM2230760_human4_umifm_counts.csv.gz')

all(colnames(baron1)==colnames(baron2))
all(colnames(baron1)==colnames(baron3))
all(colnames(baron1)==colnames(baron4))

baron=rbind(baron1, baron2, baron3, baron4)
rm(baron1,baron2,baron3,baron4)
cell.meta=baron[,1:3]
colnames(cell.meta)[1]='cell'
cell.meta$individual=substr(cell.meta$cell, start=1, stop=6)
count=as.matrix(baron[,-(1:3)])
rm(baron)
rownames(count)=cell.meta$cell
rownames(cell.meta)=cell.meta$cell
colnames(cell.meta)[3]='celltype'

baron=CreateSeuratObject(counts = t(count), project = "baron", min.cells = 3, min.features = 200,
                         meta.data = cell.meta)
rm(count, cell.meta)

baron <- NormalizeData(baron, normalization.method = "LogNormalize", scale.factor = 10000)
baron <- FindVariableFeatures(baron, selection.method = "vst", nfeatures = 2000)
baron <- ScaleData(baron, features = rownames(baron))
baron <- RunPCA(baron, features = VariableFeatures(object = baron))

ElbowPlot(baron)
baron <- RunTSNE(baron, dims = 1:10)
DimPlot(baron, group.by='celltype', label=TRUE)

DimPlot(baron, group.by='individual')
FeaturePlot(baron,reduction = "tsne",features = c("KRT19","PRSS1","GCG",
                                                           "INS","PPY","SST",
                                                           "GHRL"), ncol = 4) 


